// <auto-generated />
using System;
using AirportProject.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AirportProject.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FlightStatusId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsCritical")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PassengersCount")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FlightStatusId");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Brand = "ELAL",
                            FlightStatusId = 1L,
                            IsCritical = false,
                            LastUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Number = "bdcb46a0-e46e-446e-99d1-f6a055802685",
                            PassengersCount = 200,
                            Type = 2
                        },
                        new
                        {
                            Id = 2L,
                            Brand = "ELAL",
                            FlightStatusId = 1L,
                            IsCritical = false,
                            LastUpdate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Number = "b94abc25-a501-4b0e-9ddb-acbf2cff2cbe",
                            PassengersCount = 200,
                            Type = 1
                        });
                });

            modelBuilder.Entity("Common.Models.FlightStatuses", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FlightStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Waiting"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Processing"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Completed"
                        });
                });

            modelBuilder.Entity("Common.Models.Leg", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<long?>("FlightId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsFirstStop")
                        .HasColumnType("bit");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("OrderNo")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("Legs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Capacity = 1,
                            IsFirstStop = true,
                            Number = 1,
                            OrderNo = 5,
                            Type = 1
                        },
                        new
                        {
                            Id = 2L,
                            Capacity = 1,
                            IsFirstStop = false,
                            Number = 2,
                            OrderNo = 4,
                            Type = 1
                        },
                        new
                        {
                            Id = 3L,
                            Capacity = 1,
                            IsFirstStop = false,
                            Number = 3,
                            OrderNo = 3,
                            Type = 1
                        },
                        new
                        {
                            Id = 4L,
                            Capacity = 1,
                            IsFirstStop = false,
                            Number = 4,
                            OrderNo = 2,
                            Type = 4
                        },
                        new
                        {
                            Id = 5L,
                            Capacity = 1,
                            IsFirstStop = false,
                            Number = 5,
                            OrderNo = 6,
                            Type = 1
                        },
                        new
                        {
                            Id = 6L,
                            Capacity = 1,
                            IsFirstStop = true,
                            Number = 6,
                            OrderNo = 8,
                            Type = 4
                        },
                        new
                        {
                            Id = 7L,
                            Capacity = 1,
                            IsFirstStop = true,
                            Number = 7,
                            OrderNo = 9,
                            Type = 4
                        },
                        new
                        {
                            Id = 8L,
                            Capacity = 1,
                            IsFirstStop = false,
                            Number = 8,
                            OrderNo = 7,
                            Type = 2
                        },
                        new
                        {
                            Id = 9L,
                            Capacity = 1,
                            IsFirstStop = false,
                            Number = 9,
                            OrderNo = 1,
                            Type = 2
                        });
                });

            modelBuilder.Entity("Common.Models.LegToLeg", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("FromId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ToId")
                        .HasColumnType("bigint");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromId");

                    b.HasIndex("ToId");

                    b.ToTable("LegToLegs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            FromId = 1L,
                            ToId = 2L,
                            Type = 1
                        },
                        new
                        {
                            Id = 2L,
                            FromId = 2L,
                            ToId = 3L,
                            Type = 1
                        },
                        new
                        {
                            Id = 3L,
                            FromId = 3L,
                            ToId = 4L,
                            Type = 1
                        },
                        new
                        {
                            Id = 4L,
                            FromId = 4L,
                            ToId = 5L,
                            Type = 1
                        },
                        new
                        {
                            Id = 5L,
                            FromId = 4L,
                            ToId = 9L,
                            Type = 2
                        },
                        new
                        {
                            Id = 6L,
                            FromId = 5L,
                            ToId = 6L,
                            Type = 1
                        },
                        new
                        {
                            Id = 7L,
                            FromId = 5L,
                            ToId = 7L,
                            Type = 1
                        },
                        new
                        {
                            Id = 8L,
                            FromId = 6L,
                            ToId = 8L,
                            Type = 2
                        },
                        new
                        {
                            Id = 9L,
                            FromId = 7L,
                            ToId = 8L,
                            Type = 2
                        },
                        new
                        {
                            Id = 10L,
                            FromId = 8L,
                            ToId = 4L,
                            Type = 2
                        });
                });

            modelBuilder.Entity("Common.Models.Flight", b =>
                {
                    b.HasOne("Common.Models.FlightStatuses", "FlightStatus")
                        .WithMany()
                        .HasForeignKey("FlightStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Common.Models.Leg", b =>
                {
                    b.HasOne("Common.Models.Flight", "Flight")
                        .WithMany()
                        .HasForeignKey("FlightId");
                });

            modelBuilder.Entity("Common.Models.LegToLeg", b =>
                {
                    b.HasOne("Common.Models.Leg", "From")
                        .WithMany("FromLegs")
                        .HasForeignKey("FromId");

                    b.HasOne("Common.Models.Leg", "To")
                        .WithMany("ToLegs")
                        .HasForeignKey("ToId");
                });
#pragma warning restore 612, 618
        }
    }
}
